{"ast":null,"code":"import _classCallCheck from\"G:/koulupaskaa/Webapplications/twotter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"G:/koulupaskaa/Webapplications/twotter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"G:/koulupaskaa/Webapplications/twotter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"G:/koulupaskaa/Webapplications/twotter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"G:/koulupaskaa/Webapplications/twotter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import logo from\"./logo.svg\";import'./App.css';import Button from'react-bootstrap/Button';import'bootstrap/dist/css/bootstrap.min.css';import React,{Component,useState}from'react';import{Collapse,Container,Row,Col}from'react-bootstrap';import CreateUser from'./components/createuser';import Header from'./components/Header';import{getAllPosts}from'./services/getPosts';import{DisplayBoard}from'./components/displayBoard';import{createPost}from'./services/newPost';import{CreatePost}from'./components/createPost';import{OpenLoginModal}from'./components/openLoginModal';import{OpenNewPostModal}from'./components/openNewPostModal';import NavBarCustom from'./components/navBar';import RenderPosts from'./components/renderPosts';import{isAuthenticated}from'./services/isAuthenticated';console.log(localStorage.token);var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.IsAuthenticated=function(e){isAuthenticated(e).then(function(response){console.log(response);_this.setState({user:response.user,isLoggedIn:true});});};_this.getallPosts=function(){getAllPosts().then(function(posts){_this.setState({posts:posts});});};_this.state={user:'',isLoggedIn:false,posts:[]};//this.IsAuthenticated = this.IsAuthenticated.bind(this);\n_this.loginHandler=_this.loginHandler.bind(_assertThisInitialized(_this));_this.getAllPostsHandler=_this.getAllPostsHandler.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){console.log(localStorage.token);var token=localStorage.token;if(token){this.setState({user:\"Not currently signed in\",isLoggedIn:false,posts:[]});}else{this.IsAuthenticated(localStorage.token);}this.getallPosts();}},{key:\"loginHandler\",value:function loginHandler(){this.IsAuthenticated(localStorage.token);}},{key:\"getAllPostsHandler\",value:function getAllPostsHandler(){this.getallPosts();}},{key:\"render\",//<CreatePost createPost={this.CreatePost}></CreatePost>\nvalue:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(NavBarCustom,{user:this.state.user,loginHandler:this.loginHandler,isLoggedIn:this.state.isLoggedIn,getPosts:this.getAllPostsHandler}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(RenderPosts,{posts:this.state.posts})})})]});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["G:/koulupaskaa/Webapplications/twotter/src/App.js"],"names":["Button","React","Component","useState","Collapse","Container","Row","Col","CreateUser","Header","getAllPosts","DisplayBoard","createPost","CreatePost","OpenLoginModal","OpenNewPostModal","NavBarCustom","RenderPosts","isAuthenticated","console","log","localStorage","token","App","IsAuthenticated","e","then","response","setState","user","isLoggedIn","getallPosts","posts","state","loginHandler","bind","getAllPostsHandler"],"mappings":"s4BACA,MAAO,WAAP,CACA,MAAOA,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAO,sCAAP,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,GAA9B,CAAmCC,GAAnC,KAA8C,iBAA9C,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,OAASC,YAAT,KAA6B,2BAA7B,CACA,OAASC,UAAT,KAA2B,oBAA3B,CACA,OAASC,UAAT,KAA2B,yBAA3B,CACA,OAASC,cAAT,KAA+B,6BAA/B,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CACA,MAAOC,CAAAA,YAAP,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,OAASC,eAAT,KAAgC,4BAAhC,CAEAC,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,KAAzB,E,GAEMC,CAAAA,G,0FACJ,cAAa,qCACX,wBADW,MAuCbC,eAvCa,CAuCK,SAACC,CAAD,CAAO,CACvBP,eAAe,CAACO,CAAD,CAAf,CACCC,IADD,CACM,SAAAC,QAAQ,CAAI,CAChBR,OAAO,CAACC,GAAR,CAAYO,QAAZ,EACE,MAAKC,QAAL,CAAc,CACZC,IAAI,CAAEF,QAAQ,CAACE,IADH,CAEZC,UAAU,CAAE,IAFA,CAAd,EAIH,CAPD,EAQD,CAhDY,OAkDbC,WAlDa,CAkDC,UAAM,CAClBrB,WAAW,GACVgB,IADD,CACM,SAAAM,KAAK,CAAI,CACb,MAAKJ,QAAL,CAAc,CAACI,KAAK,CAAEA,KAAR,CAAd,EACD,CAHD,EAID,CAvDY,CAEX,MAAKC,KAAL,CAAa,CACXJ,IAAI,CAAE,EADK,CAEXC,UAAU,CAAE,KAFD,CAGXE,KAAK,CAAE,EAHI,CAAb,CAMA;AACA,MAAKE,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CACA,MAAKC,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,+BAA1B,CAVW,aAWZ,C,6EAIkB,CACjBhB,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,KAAzB,EACA,GAAMA,CAAAA,KAAK,CAAGD,YAAY,CAACC,KAA3B,CACA,GAAGA,KAAH,CAAS,CACP,KAAKM,QAAL,CAAc,CACZC,IAAI,CAAE,yBADM,CAEZC,UAAU,CAAE,KAFA,CAGZE,KAAK,CAAE,EAHK,CAAd,EAMD,CAPD,IAOO,CACL,KAAKR,eAAL,CAAqBH,YAAY,CAACC,KAAlC,EACD,CACD,KAAKS,WAAL,GACD,C,mDAEc,CACb,KAAKP,eAAL,CAAqBH,YAAY,CAACC,KAAlC,EACD,C,+DAEmB,CAClB,KAAKS,WAAL,GACD,C,gBAqBH;uBACW,CACP,mBACE,aAAK,SAAS,CAAC,YAAf,wBACE,KAAC,YAAD,EAAc,IAAI,CAAE,KAAKE,KAAL,CAAWJ,IAA/B,CAAqC,YAAY,CAAE,KAAKK,YAAxD,CAAsE,UAAU,CAAE,KAAKD,KAAL,CAAWH,UAA7F,CAAyG,QAAQ,CAAE,KAAKM,kBAAxH,EADF,cAEE,KAAC,SAAD,wBACE,KAAC,GAAD,wBACI,KAAC,WAAD,EAAa,KAAK,CAAE,KAAKH,KAAL,CAAWD,KAA/B,EADJ,EADF,EAFF,GADF,CAUD,C,iBAvEe9B,S,EA2ElB,cAAeqB,CAAAA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState } from 'react';\nimport { Collapse, Container, Row, Col } from 'react-bootstrap';\nimport CreateUser from './components/createuser';\nimport Header from './components/Header';\nimport { getAllPosts } from './services/getPosts';\nimport { DisplayBoard } from './components/displayBoard';\nimport { createPost } from './services/newPost';\nimport { CreatePost } from './components/createPost';\nimport { OpenLoginModal } from './components/openLoginModal';\nimport { OpenNewPostModal } from './components/openNewPostModal';\nimport NavBarCustom from './components/navBar';\nimport RenderPosts from './components/renderPosts';\nimport { isAuthenticated } from './services/isAuthenticated';\n\nconsole.log(localStorage.token);\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      user: '',\n      isLoggedIn: false,\n      posts: []\n    }\n\n    //this.IsAuthenticated = this.IsAuthenticated.bind(this);\n    this.loginHandler = this.loginHandler.bind(this);\n    this.getAllPostsHandler = this.getAllPostsHandler.bind(this);\n  }\n  \n  \n\n  componentDidMount(){\n    console.log(localStorage.token);\n    const token = localStorage.token;\n    if(token){\n      this.setState({\n        user: \"Not currently signed in\",\n        isLoggedIn: false,\n        posts: []\n      })\n      \n    } else {\n      this.IsAuthenticated(localStorage.token);\n    }\n    this.getallPosts();\n  }\n\n  loginHandler() {\n    this.IsAuthenticated(localStorage.token);\n  }\n\n  getAllPostsHandler(){\n    this.getallPosts();\n  }\n\n  IsAuthenticated = (e) => {\n    isAuthenticated(e)\n    .then(response => {\n      console.log(response);\n        this.setState({\n          user: response.user,\n          isLoggedIn: true\n        });\n    })\n  }\n\n  getallPosts = () => {\n    getAllPosts()\n    .then(posts => {\n      this.setState({posts: posts})\n    });\n  }\n\n  \n//<CreatePost createPost={this.CreatePost}></CreatePost>\n  render() {\n    return(\n      <div className=\"App-header\">\n        <NavBarCustom user={this.state.user} loginHandler={this.loginHandler} isLoggedIn={this.state.isLoggedIn} getPosts={this.getAllPostsHandler}></NavBarCustom>\n        <Container>\n          <Row>\n              <RenderPosts posts={this.state.posts}></RenderPosts>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}