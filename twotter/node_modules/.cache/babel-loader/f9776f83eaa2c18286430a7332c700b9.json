{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"G:\\\\koulupaskaa\\\\Webapplications\\\\twotter\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState } from 'react';\nimport { Collapse, Container, Row, Col } from 'react-bootstrap';\nimport CreateUser from './components/createuser';\nimport Header from './components/Header';\nimport { getAllPosts } from './services/getPosts';\nimport { DisplayBoard } from './components/displayBoard';\nimport { createPost } from './services/newPost';\nimport { CreatePost } from './components/createPost';\nimport { OpenLoginModal } from './components/openLoginModal';\nimport { OpenNewPostModal } from './components/openNewPostModal';\nimport NavBarCustom from './components/navBar';\nimport RenderPosts from './components/renderPosts';\nimport { isAuthenticated } from './services/isAuthenticated';\nconsole.log(localStorage.token);\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.IsAuthenticated = e => {\n      isAuthenticated(e).then(response => {\n        console.log(response);\n        this.setState({\n          user: response.user,\n          isLoggedIn: true\n        });\n      });\n    };\n\n    this.state = {\n      user: '',\n      isLoggedIn: false\n    }; //this.IsAuthenticated = this.IsAuthenticated.bind(this);\n\n    this.loginHandler = this.loginHandler.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(localStorage.token);\n    const token = localStorage.token;\n\n    if (token) {\n      this.setState({\n        user: \"Not currently signed in\",\n        isLoggedIn: false\n      });\n    } else {\n      this.IsAuthenticated(localStorage.token);\n    }\n  }\n\n  loginHandler() {\n    this.IsAuthenticated(localStorage.token);\n  }\n\n  //<CreatePost createPost={this.CreatePost}></CreatePost>\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(NavBarCustom, {\n        user: this.state.user,\n        loginHandler: this.loginHandler,\n        isLoggedIn: this.state.isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayBoard, {\n        getAllPosts: this.getallPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(RenderPosts, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["G:/koulupaskaa/Webapplications/twotter/src/App.js"],"names":["Button","React","Component","useState","Collapse","Container","Row","Col","CreateUser","Header","getAllPosts","DisplayBoard","createPost","CreatePost","OpenLoginModal","OpenNewPostModal","NavBarCustom","RenderPosts","isAuthenticated","console","log","localStorage","token","App","constructor","IsAuthenticated","e","then","response","setState","user","isLoggedIn","state","loginHandler","bind","componentDidMount","render","getallPosts"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,GAA9B,EAAmCC,GAAnC,QAA8C,iBAA9C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AAEAC,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,KAAzB;;AAEA,MAAMC,GAAN,SAAkBrB,SAAlB,CAA4B;AAC1BsB,EAAAA,WAAW,GAAE;AACX;;AADW,SAgCbC,eAhCa,GAgCMC,CAAD,IAAO;AACvBR,MAAAA,eAAe,CAACQ,CAAD,CAAf,CACCC,IADD,CACMC,QAAQ,IAAI;AAChBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACE,aAAKC,QAAL,CAAc;AACZC,UAAAA,IAAI,EAAEF,QAAQ,CAACE,IADH;AAEZC,UAAAA,UAAU,EAAE;AAFA,SAAd;AAIH,OAPD;AAQD,KAzCY;;AAEX,SAAKC,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb,CAFW,CAOX;;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAIDC,EAAAA,iBAAiB,GAAE;AACjBhB,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,KAAzB;AACA,UAAMA,KAAK,GAAGD,YAAY,CAACC,KAA3B;;AACA,QAAGA,KAAH,EAAS;AACP,WAAKO,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE,yBADM;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAAd;AAKD,KAND,MAMO;AACL,WAAKN,eAAL,CAAqBJ,YAAY,CAACC,KAAlC;AACD;AAEF;;AAEDW,EAAAA,YAAY,GAAG;AACb,SAAKR,eAAL,CAAqBJ,YAAY,CAACC,KAAlC;AACD;;AAcH;AACEc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWF,IAA/B;AAAqC,QAAA,YAAY,EAAE,KAAKG,YAAxD;AAAsE,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWD;AAA7F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAKM;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA,+BACE,QAAC,GAAD;AAAA,iCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA1DyB;;AA8D5B,eAAed,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState } from 'react';\nimport { Collapse, Container, Row, Col } from 'react-bootstrap';\nimport CreateUser from './components/createuser';\nimport Header from './components/Header';\nimport { getAllPosts } from './services/getPosts';\nimport { DisplayBoard } from './components/displayBoard';\nimport { createPost } from './services/newPost';\nimport { CreatePost } from './components/createPost';\nimport { OpenLoginModal } from './components/openLoginModal';\nimport { OpenNewPostModal } from './components/openNewPostModal';\nimport NavBarCustom from './components/navBar';\nimport RenderPosts from './components/renderPosts';\nimport { isAuthenticated } from './services/isAuthenticated';\n\nconsole.log(localStorage.token);\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      user: '',\n      isLoggedIn: false\n    }\n\n    //this.IsAuthenticated = this.IsAuthenticated.bind(this);\n    this.loginHandler = this.loginHandler.bind(this);\n  }\n  \n  \n\n  componentDidMount(){\n    console.log(localStorage.token);\n    const token = localStorage.token;\n    if(token){\n      this.setState({\n        user: \"Not currently signed in\",\n        isLoggedIn: false\n      })\n      \n    } else {\n      this.IsAuthenticated(localStorage.token);\n    }\n    \n  }\n\n  loginHandler() {\n    this.IsAuthenticated(localStorage.token);\n  }\n\n  IsAuthenticated = (e) => {\n    isAuthenticated(e)\n    .then(response => {\n      console.log(response);\n        this.setState({\n          user: response.user,\n          isLoggedIn: true\n        });\n    })\n  }\n\n  \n//<CreatePost createPost={this.CreatePost}></CreatePost>\n  render() {\n    return(\n      <div className=\"App-header\">\n        <NavBarCustom user={this.state.user} loginHandler={this.loginHandler} isLoggedIn={this.state.isLoggedIn}></NavBarCustom>\n        <DisplayBoard getAllPosts={this.getallPosts}></DisplayBoard>\n        <Container>\n          <Row>\n              <RenderPosts></RenderPosts>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}