{"version":3,"sources":["logo.svg","services/getPosts.js","services/newPost.js","components/createPost.js","services/login.js","components/loginPage.js","services/logOut.js","components/openLoginModal.js","components/newPostPage.js","components/openNewPostModal.js","services/register.js","components/registerPage.js","components/openRegisterModal.js","components/navBar.js","components/renderPosts.js","services/isAuthenticated.js","App.js","reportWebVitals.js","index.js"],"names":["a","fetch","response","json","data","method","headers","body","JSON","stringify","userinfo","LoginPage","props","HideModal","handleClose","Login","e","login","then","localStorage","setItem","token","console","log","onLogin","state","email","password","error","handlePassChange","bind","handleUserChange","handleSubmit","dismissError","this","setState","evt","preventDefault","userInfo","target","value","loginHandler","Form","onSubmit","className","onClick","Button","Label","Control","type","onChange","Component","OpenLoginModal","showModal","show","hideModal","logOut","removeItem","logout","button","isLoggedIn","variant","Modal","showHideClassName","AddPost","CreatePost","createPost","title","subject","user","displayName","reloadPosts","getPosts","handleTitleChange","handleSubjectChange","placeholder","require","OpenNewPostModal","RegisterPage","Register","register","username","handleEmailChange","OpenRegisterModal","handleChangeValue","NavBarCustom","Navbar","bg","expand","Container","Brand","href","Nav","Link","setDate","seconds","t","Date","setSeconds","getMonth","getDate","getFullYear","join","getHours","getMinutes","getSeconds","RenderPosts","posts","map","post","index","date","_seconds","App","IsAuthenticated","isAuthenticated","getallPosts","getAllPosts","getAllPostsHandler","Row","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6747464c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nexport async function getAllPosts() {\r\n    const response = await fetch('/api/posts');\r\n    return await response.json();\r\n}\r\n","export async function createPost(data) {\r\n    const response = await fetch('/api/newpost', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(data)\r\n    });\r\n    return await response.json();\r\n}","import React from 'react';\r\n\r\nexport const CreatePost = ({createPost}) => {\r\n    \r\n    return(\r\n        <div className=\"post-button\">\r\n            <div className=\"btn\">\r\n                <button type=\"button\" onClick={(e) => createPost()} className=\"btn btn-warning\">Create new post</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export async function login(userinfo) {\r\n    const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(userinfo)\r\n    });\r\n    return await response.json();\r\n}","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport component from './component.css';\r\nimport { login } from './../services/login';\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: '',\r\n        };\r\n        this.handlePassChange = this.handlePassChange.bind(this);\r\n        this.handleUserChange = this.handleUserChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.dismissError = this.dismissError.bind(this);\r\n\r\n\r\n    }\r\n\r\n    dismissError() {\r\n        this.setState({ error: '' });\r\n    }\r\n\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        \r\n        if(!this.state.email) {\r\n            return this.setState({ error: 'Username is required' });\r\n        }\r\n\r\n        if(!this.state.password) {\r\n            return this.setState({ error: 'Password is required' });\r\n        }\r\n\r\n        var userInfo = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.Login(userInfo);\r\n        return this.setState({ error: '' });\r\n    }\r\n\r\n    HideModal = () => {\r\n        this.props.handleClose();\r\n    }\r\n\r\n    Login = (e) => {\r\n        login(e)\r\n        .then(response => {\r\n            localStorage.setItem('token', response.token);\r\n            console.log(\"TOKEN\", response.token);\r\n            this.onLogin();\r\n            this.HideModal();\r\n        })\r\n    }\r\n\r\n    handleUserChange(evt) {\r\n        this.setState({\r\n            email: evt.target.value,\r\n        });\r\n    }\r\n\r\n    handlePassChange(evt) {\r\n        this.setState({\r\n            password: evt.target.value,\r\n        });\r\n    }\r\n\r\n    onLogin(){\r\n        this.props.loginHandler();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleSubmit} className=\"container\">\r\n                    {\r\n                        this.state.error &&\r\n                        <h3 onClick={this.dismissError}>\r\n                            <Button onClick={this.dismissError}>X</Button>\r\n                            {this.state.error}\r\n                        </h3>\r\n                    }\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <Form.Label className=\"usernameLabel\">Email</Form.Label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <Form.Control className=\"username\" type=\"email\" value={this.state.email} onChange={this.handleUserChange} />\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <Form.Label className=\"passwordLabel\">Password</Form.Label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <Form.Control className=\"password\" type=\"password\" value={this.state.password} onChange={this.handlePassChange}></Form.Control>\r\n                        </div>   \r\n                    </div>                  \r\n                    <Form.Control className=\"submit\" type=\"submit\" value=\"Log In\"></Form.Control>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","export async function logout() {\r\n    const response = await fetch('/api/logout', {\r\n        method: 'GET',\r\n        headers: {'Content-Type': 'application/json'},\r\n    });\r\n    return await response.json();\r\n}","import React, { Component, useState } from 'react';\r\nimport  LoginPage  from './loginPage';\r\nimport component from './component.css';\r\nimport { Button } from 'react-bootstrap';\r\nimport { logout } from './../services/logOut';\r\n\r\nexport class OpenLoginModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"Props\", this.props);\r\n        this.state = {\r\n            show: false\r\n        };\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState( { show: true });\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState( { show: false });\r\n    }\r\n\r\n    logOut = () => {\r\n        localStorage.removeItem('token');\r\n        logout()\r\n        .then(response => {\r\n            console.log(response);\r\n            this.loginHandler();\r\n        }\r\n        )\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.loginHandler();\r\n    }\r\n\r\n    render() {\r\n        let button;\r\n        console.log(\"isLoggedIn\", this.props.isLoggedIn);\r\n        if(this.props.isLoggedIn){\r\n            button = <Button variant=\"outline-info\" onClick={this.logOut}>Log out</Button>\r\n        } else {\r\n            button = <Button variant=\"outline-info\" onClick={this.showModal}>Log in</Button>\r\n        }\r\n        return (     \r\n            <div>\r\n                <Modal show={this.state.show} handleClose={this.hideModal} loginHandler={this.props.loginHandler}>\r\n                </Modal>\r\n                {button}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Modal = ({ handleClose, show, loginHandler }) => {\r\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n    return(\r\n        <div className={showHideClassName}>\r\n            <section>\r\n                <LoginPage loginHandler={loginHandler} handleClose={handleClose}></LoginPage>\r\n                <Button onClick={handleClose} className=\"close\">X</Button>\r\n            </section>\r\n        </div>\r\n        \r\n    );\r\n};","\r\nimport { createPost } from './../services/newPost';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { component } from './component.css';\r\nconst { Component } = require(\"react\");\r\n\r\nclass AddPost extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            title: \"\",\r\n            subject: \"\",\r\n            error: \"\",\r\n            displayName: \"\",\r\n        };\r\n\r\n        this.handleTitleChange = this.handleTitleChange.bind(this);\r\n        this.handleSubjectChange = this.handleSubjectChange.bind(this);\r\n        this.dismissError = this.dismissError.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    dismissError(){\r\n        this.setState({ error: \"\" });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.handleClose();\r\n    }\r\n\r\n    handleSubmit(evt){\r\n        evt.preventDefault();\r\n\r\n        if(!this.state.title){\r\n            return this.setState({ error: \"Title is required\" });\r\n        }\r\n        if(!this.state.subject) {\r\n            return this.setState({ error: \"Subject is required\" });\r\n        }\r\n\r\n\r\n        this.CreatePost();\r\n        return this.setState({ error: \"\" });\r\n    }\r\n\r\n    handleTitleChange(evt) {\r\n        this.setState({\r\n            title: evt.target.value,\r\n        });\r\n    }\r\n\r\n    handleSubjectChange(evt) {\r\n        this.setState({\r\n            subject: evt.target.value,\r\n        });\r\n    }\r\n\r\n    CreatePost = (e) => {\r\n        var postData = {\r\n            title: this.state.title,\r\n            subject: this.state.subject,\r\n            user: this.props.displayName,\r\n        }\r\n        createPost(postData)\r\n        .then(response => {\r\n            this.handleClose();\r\n            this.reloadPosts();\r\n          console.log(response);\r\n        })\r\n      }\r\n\r\n      reloadPosts = () => {\r\n          this.props.getPosts();\r\n      }\r\n\r\n    render() {\r\n        return(\r\n        <div>\r\n            <div className=\"form-are\">\r\n                <Form onSubmit={this.handleSubmit} className=\"container\">\r\n                    {\r\n                        this.state.error &&\r\n                        <h3 onClick={this.dismissError}>\r\n                            <Button onClick={this.dismissError}>X</Button>\r\n                            {this.state.error}\r\n                        </h3>\r\n                    }\r\n                    <Form.Label>Logged in as: {this.props.displayName}</Form.Label>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <Form.Label>Title</Form.Label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <Form.Control type=\"text\" placeholder=\"Enter title\" value={this.state.title} onChange={this.handleTitleChange}></Form.Control>\r\n                        </div>    \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <Form.Label>Subject</Form.Label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <Form.Control type=\"text\" placeholder=\"Enter subject\" value={this.state.subject} onChange={this.handleSubjectChange}></Form.Control>\r\n                        </div>\r\n                    </div>\r\n                    <Form.Control className=\"submit\" type=\"submit\" value=\"Submit\"></Form.Control>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default AddPost;","import React, { Component, useState } from 'react';\r\nimport AddPost from './newPostPage';\r\nimport component from './component.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport class OpenNewPostModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        };\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState( { show: true });\r\n        console.log(this.state.show);\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState( { show: false });\r\n    }\r\n\r\n    render() {\r\n        let button;\r\n        if(this.props.isLoggedIn){\r\n            button = <Button variant=\"outline-warning\" onClick={this.showModal}>New post</Button>\r\n        } else {\r\n            return false;\r\n        }\r\n        return (     \r\n            <div>\r\n                <Modal show={this.state.show} handleClose={this.hideModal} user={this.props.user} getPosts={this.props.getPosts}>\r\n                </Modal>\r\n                {button}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Modal = ({ handleClose, show, user, getPosts }) => {\r\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n    return(\r\n        <div className={showHideClassName}>\r\n            <section>\r\n                <AddPost displayName={user} handleClose={handleClose} getPosts={getPosts}></AddPost>\r\n                <Button onClick={handleClose} className=\"close\">X</Button>\r\n            </section>\r\n        </div>\r\n        \r\n    );\r\n};","export async function register(userInfo){\r\n    const response = await fetch('/api/signup', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify(userInfo) \r\n    });\r\n    return await response.json();\r\n}","import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { register } from './../services/register';\r\n\r\nimport component from './component.css';\r\n\r\nclass RegisterPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            error: '',\r\n        };\r\n\r\n        this.handlePassChange = this.handlePassChange.bind(this);\r\n        this.handleUserChange = this.handleUserChange.bind(this);\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.dismissError = this.dismissError.bind(this);\r\n\r\n    }\r\n\r\n    dismissError() {\r\n        this.setState({ error: '' });\r\n    }\r\n    \r\n\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        \r\n        if(!this.state.username) {\r\n            return this.setState({ error: 'Username is required' });\r\n        }\r\n\r\n        if(!this.state.email) {\r\n            return this.setState({ error: 'Email is required'});\r\n        }\r\n\r\n        if(!this.state.password) {\r\n            return this.setState({ error: 'Password is required' });\r\n        }\r\n\r\n        var userInfo = {\r\n            email: this.state.email,\r\n            displayName: this.state.username,\r\n            password: this.state.password\r\n        }\r\n\r\n        this.Register(userInfo);\r\n        return this.setState({ error: '' });\r\n    }\r\n\r\n    HideModal = () => {\r\n        this.props.handleClose();\r\n    }\r\n\r\n    Register = (e) => {\r\n        register(e)\r\n        .then(response => {\r\n            console.log(response);\r\n            localStorage.setItem('token', response.token);\r\n            this.HideModal();\r\n        })\r\n    }\r\n\r\n    handleUserChange(evt) {\r\n        this.setState({\r\n            username: evt.target.value,\r\n        });\r\n    }\r\n\r\n    handlePassChange(evt) {\r\n        this.setState({\r\n            password: evt.target.value,\r\n        });\r\n    }\r\n\r\n    handleEmailChange(evt) {\r\n        this.setState({\r\n            email: evt.target.value,\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleSubmit} className=\"container\">\r\n                    {\r\n                        this.state.error &&\r\n                        <h3 onClick={this.dismissError}>\r\n                            <Button onClick={this.dismissError}>X</Button>\r\n                            {this.state.error}\r\n                        </h3>\r\n                    }\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <Form.Label>Email</Form.Label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <Form.Control className=\"email\" type=\"email\" value={this.state.email} onChange={this.handleEmailChange}></Form.Control>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <Form.Label className=\"usernameLabel\">Display name</Form.Label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <Form.Control className=\"username\" type=\"text\" value={this.state.username} onChange={this.handleUserChange} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-25\">\r\n                            <Form.Label className=\"passwordLabel\">Password</Form.Label>\r\n                        </div>\r\n                        <div className=\"col-75\">\r\n                            <Form.Control className=\"password\" type=\"password\" value={this.state.password} onChange={this.handlePassChange}></Form.Control>\r\n                        </div>\r\n                    </div>\r\n                    <Form.Control className=\"submit\" type=\"submit\" value=\"Register\"></Form.Control>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","import React, { Component, useState } from 'react';\r\nimport  RegisterPage  from './registerPage';\r\nimport component from './component.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport class OpenRegisterModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        };\r\n    }\r\n\r\n    handleChangeValue = e => this.setState({show: e.target.value});\r\n\r\n    showModal = () => {\r\n        this.setState( { show: true });\r\n        console.log(this.state.show);\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState( { show: false });\r\n    }\r\n\r\n    render() {\r\n        let button;\r\n        if(this.props.isLoggedIn){\r\n            return false;\r\n        } else {\r\n            button = <Button variant=\"outline-info\" onClick={this.showModal}>Register</Button>\r\n        }\r\n        return (     \r\n            <div>\r\n                <Modal show={this.state.show} handleClose={this.hideModal} hideModal={this.hideModal}>\r\n                </Modal>\r\n                {button}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Modal = ({ handleClose, show, hideModal }) => {\r\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n    console.log(showHideClassName);\r\n\r\n    return(\r\n        <div className={showHideClassName}>\r\n            <section>\r\n                <RegisterPage show={show} handleClose={handleClose}></RegisterPage>\r\n                <Button onClick={handleClose} className=\"close\">X</Button>\r\n            </section>\r\n        </div>\r\n        \r\n    );\r\n};","import { Navbar, Form, Nav, FormControl, Button, Container } from 'react-bootstrap';\r\nimport { OpenLoginModal } from './openLoginModal';\r\nimport { OpenNewPostModal } from './openNewPostModal';\r\nimport { OpenRegisterModal } from './openRegisterModal';\r\nconst { Component } = require(\"react\");\r\n\r\n\r\n\r\nclass NavBarCustom extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    //<Button variant=\"outline-info\" className=\"buttons\">Login</Button>\r\n    //<Button variant=\"outline-info\" className=\"buttons\">Register</Button>\r\n    //<Button variant=\"outline-warning\" className=\"buttons\">New Post</Button>\r\n    render(){\r\n        return(\r\n            <Navbar bg=\"dark\" variant=\"dark\" className=\"navbar\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"/\">Twatter</Navbar.Brand>\r\n                    <Nav className=\"mr-auto navbar-nav\">\r\n                        <Nav.Link href=\"/\" className=\"nav-link\">Home</Nav.Link>\r\n                    </Nav>\r\n                    <div>\r\n                        <h3>{this.props.user}</h3>\r\n                        <OpenLoginModal loginHandler={this.props.loginHandler} isLoggedIn={this.props.isLoggedIn}></OpenLoginModal>\r\n                        <OpenNewPostModal user={this.props.user} isLoggedIn={this.props.isLoggedIn} getPosts={this.props.getPosts}></OpenNewPostModal>\r\n                        <OpenRegisterModal isLoggedIn={this.props.isLoggedIn}></OpenRegisterModal>\r\n                    </div>\r\n                </Container>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBarCustom;","import React, { Component } from 'react';\r\nimport { getAllPosts } from './../services/getPosts';\r\n\r\n    function setDate(seconds){\r\n        var t = new Date(1970, 0, 1);\r\n        t.setSeconds(seconds);\r\n        var dformat =[t.getMonth()+1,\r\n            t.getDate(),\r\n            t.getFullYear()].join('/')+' '+\r\n           [t.getHours(),\r\n            t.getMinutes(),\r\n            t.getSeconds()].join(':');\r\n        return dformat;\r\n      }\r\n\r\nclass RenderPosts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n/*\r\n    componentDidMount(){\r\n        this.getallPosts();\r\n        console.log(\"ComponentDidMount called.\");\r\n    }\r\n\r\n    getallPosts = () => {\r\n        getAllPosts()\r\n        .then(posts => {\r\n          this.setState({posts: posts})\r\n        });\r\n      }*/\r\n\r\n\r\n//<p className=\"list-group-item-text\">{post.subject}</p><h3 className=\"list-group-item-heading\">{post.date}</h3>\r\n      render(){\r\n          return(\r\n              <div className=\"list-group\">\r\n                  {\r\n                      this.props.posts.map(function(post, index) {\r\n                          return (\r\n                          <a href=\"#\" key={index} className=\"list-group-item active\">\r\n                            <h4 href=\"/profile{post.user}\" className=\"list-group-item-heading\">{post.user}</h4>\r\n                            <h4>{post.title}</h4>\r\n                            <h5 className=\"list-group-item-heading\">{post.post}</h5>\r\n                            <h5 className=\"list-group-item-heading\">{setDate(post.date._seconds)}</h5>        \r\n                            \r\n                          </a>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>\r\n          )\r\n      }\r\n}\r\n\r\nexport default RenderPosts;","export async function isAuthenticated(token){\r\n    const data = JSON.stringify({\r\n        token: token\r\n    })\r\n    const response = await fetch('/api/isAuth', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: data,\r\n    });\r\n\r\n    return await response.json();\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Component, useState } from 'react';\nimport { Collapse, Container, Row, Col } from 'react-bootstrap';\nimport CreateUser from './components/createuser';\nimport Header from './components/Header';\nimport { getAllPosts } from './services/getPosts';\nimport { DisplayBoard } from './components/displayBoard';\nimport { createPost } from './services/newPost';\nimport { CreatePost } from './components/createPost';\nimport { OpenLoginModal } from './components/openLoginModal';\nimport { OpenNewPostModal } from './components/openNewPostModal';\nimport NavBarCustom from './components/navBar';\nimport RenderPosts from './components/renderPosts';\nimport { isAuthenticated } from './services/isAuthenticated';\n\nconsole.log(localStorage.token);\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      user: '',\n      isLoggedIn: false,\n      posts: []\n    }\n\n    //this.IsAuthenticated = this.IsAuthenticated.bind(this);\n    this.loginHandler = this.loginHandler.bind(this);\n    this.getAllPostsHandler = this.getAllPostsHandler.bind(this);\n  }\n  \n  \n\n  componentDidMount(){\n    console.log(localStorage.token);\n    const token = localStorage.token;\n    if(token){\n      this.IsAuthenticated(localStorage.token);    \n    } else {\n      this.setState({\n        user: \"Not currently signed in\",\n        isLoggedIn: false,\n        posts: []\n      })\n    }\n    this.getallPosts();\n  }\n\n  loginHandler() {\n    this.IsAuthenticated(localStorage.token);\n  }\n\n  getAllPostsHandler(){\n    this.getallPosts();\n  }\n\n  IsAuthenticated = (e) => {\n    if(e) {\n      isAuthenticated(e)\n    .then(response => {\n      console.log(response);\n        this.setState({\n          user: response.user,\n          isLoggedIn: true\n        });\n    })\n    } else {\n      this.setState({\n        user: 'Not currently signed in',\n        isLoggedIn: false\n      })\n    }\n    \n  }\n\n  getallPosts = () => {\n    getAllPosts()\n    .then(posts => {\n      this.setState({posts: posts})\n    });\n  }\n\n  \n//<CreatePost createPost={this.CreatePost}></CreatePost>\n  render() {\n    return(\n      <div className=\"App-header\">\n        <NavBarCustom user={this.state.user} loginHandler={this.loginHandler} isLoggedIn={this.state.isLoggedIn} getPosts={this.getAllPostsHandler}></NavBarCustom>\n        <Container>\n          <Row>\n              <RenderPosts posts={this.state.posts}></RenderPosts>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}